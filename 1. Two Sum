#https://leetcode.com/problems/two-sum/

#Analysis:
#It is an easy problem, and it could be solved by hashtable.
#The timecomplexity is O(n)

public class Solution {
    public int[] twoSum(int[] nums, int target) {
        int[] count= new int[2];
        Map<Integer, Integer> numsCount= new HashMap<Integer, Integer>();
        for(int i=0; i< nums.length; i++){
            numsCount.put(nums[i], i+1);
        }
        for(int i=0; i<nums.length; i++){
            //int t= numsCount.get(target-nums[i]);
            if(numsCount.containsKey(target-nums[i]) && numsCount.get(target-nums[i])!=(i+1)){
                int t=numsCount.get(target-nums[i]);
                count[0]= (t>(i+1))?(i+1):t;
                count[1]= (t>(i+1))?t:(i+1);
                return count;
            }
        }
        return count;
    }
}
